{"buildConfigurations":[{"baseConfigurationFileReference":"1b51eb2de9250bf0ff9c7ab3dd03c96871879128b37fe68ae2487d1ea1cb7870","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","CLANG_ENABLE_MODULES":"YES","CODE_SIGN_ENTITLEMENTS":"whospick_reactnative_actor/후즈픽 배우.entitlements","CURRENT_PROJECT_VERSION":"20210711.1","DEVELOPMENT_TEAM":"63SVQ5CFBK","ENABLE_BITCODE":"NO","INFOPLIST_FILE":"whospick_reactnative_actor/Info.plist","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","MARKETING_VERSION":"1.0.2","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"com.whospick.app.actor","PRODUCT_NAME":"WhospickU","SWIFT_OPTIMIZATION_LEVEL":"-Onone","SWIFT_VERSION":"5.0","VERSIONING_SYSTEM":"apple-generic"},"guid":"1b51eb2de9250bf0ff9c7ab3dd03c9684f4285df77029c7e9488e337d2300446","name":"Debug"},{"baseConfigurationFileReference":"1b51eb2de9250bf0ff9c7ab3dd03c96838cea4ae0a600fd5dda85d950ca38e95","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","CLANG_ENABLE_MODULES":"YES","CODE_SIGN_ENTITLEMENTS":"whospick_reactnative_actor/후즈픽 배우.entitlements","CURRENT_PROJECT_VERSION":"20210711.1","DEVELOPMENT_TEAM":"63SVQ5CFBK","INFOPLIST_FILE":"whospick_reactnative_actor/Info.plist","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","MARKETING_VERSION":"1.0.2","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"com.whospick.app.actor","PRODUCT_NAME":"WhospickU","SWIFT_VERSION":"5.0","VERSIONING_SYSTEM":"apple-generic"},"guid":"1b51eb2de9250bf0ff9c7ab3dd03c9686515d5e59d9b359982bb12691657424e","name":"Release"}],"buildPhases":[{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"false","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968bb266358a652a7c11cdc893f0f7eeca7","inputFileListPaths":[],"inputFilePaths":["${PODS_PODFILE_DIR_PATH}/Podfile.lock","${PODS_ROOT}/Manifest.lock"],"name":"[CP] Check Pods Manifest.lock","originalObjectID":"0ABCDF81A535DA5B8B35D734","outputFileListPaths":[],"outputFilePaths":["$(DERIVED_FILE_DIR)/Pods-whospick_reactnative_actor-checkManifestLockResult.txt"],"scriptContents":"diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"false","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968dd79342f57895aeedceb44921fb58fb0","inputFileListPaths":[],"inputFilePaths":[],"name":"Start Packager","originalObjectID":"FD10A7F022414F080027D42C","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c9687d9727a0faeea5d48c093ce9689bfdfa","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968231f2d0c2befbc4314e854935e41e871"},{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c968594d24657a64adbd3fc833ee65dea929","guid":"1b51eb2de9250bf0ff9c7ab3dd03c9681fd9f1af2b3f1f4e149b5f4a3ebedb80"}],"guid":"1b51eb2de9250bf0ff9c7ab3dd03c96829790f8262a1d5c348529b77c65ea1b8","type":"com.apple.buildphase.sources"},{"buildFiles":[{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c96859a8973eb8e15e91f5e4b569700eed57","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968ce83c1ac7e5ebe3fca7a39ac8457eac2"}],"guid":"1b51eb2de9250bf0ff9c7ab3dd03c96867db448fb6beb4f77960c855c856e0dc","type":"com.apple.buildphase.frameworks"},{"buildFiles":[{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c9688248730f34ef23cd1b8010a7bc53fb39","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968925d33dbd384bbd109ca87e66eb9ab64"},{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c968aa80d8271a428113a8147aad2a7f2b0e","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968b9e8bc90ca981804078ec481a04be928"},{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c9683afd4790a24a3cfd3a0ba8481263e90a","guid":"1b51eb2de9250bf0ff9c7ab3dd03c9682855fb8ed3c32c0e32b955d562ca19ed"},{"fileReference":"1b51eb2de9250bf0ff9c7ab3dd03c9684aaee7cf1e0bbe6a7e230506df0e55b6","guid":"1b51eb2de9250bf0ff9c7ab3dd03c9686f62f52dc3c3f23c6692944d09442d59"}],"guid":"1b51eb2de9250bf0ff9c7ab3dd03c9687257aa460125423b2ea327be6b0308a7","type":"com.apple.buildphase.resources"},{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"true","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968746ed6f7c998a4a49111f31206ee22e5","inputFileListPaths":[],"inputFilePaths":[],"name":"Bundle React Native code and images","originalObjectID":"00DD1BFF1BD5951E006B06BC","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"false","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968e2f650397957e98346be34d41e726529","inputFileListPaths":[],"inputFilePaths":["${PODS_ROOT}/Target Support Files/Pods-whospick_reactnative_actor/Pods-whospick_reactnative_actor-frameworks.sh","${PODS_ROOT}/naveridlogin-sdk-ios/NaverThirdPartyLogin.framework"],"name":"[CP] Embed Pods Frameworks","originalObjectID":"62E3A2C2A8A6711009F04D4A","outputFileListPaths":[],"outputFilePaths":["${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/NaverThirdPartyLogin.framework"],"scriptContents":"\"${PODS_ROOT}/Target Support Files/Pods-whospick_reactnative_actor/Pods-whospick_reactnative_actor-frameworks.sh\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"false","guid":"1b51eb2de9250bf0ff9c7ab3dd03c9687934bc55d873568a17709da7ccf2da5d","inputFileListPaths":[],"inputFilePaths":["${PODS_ROOT}/Target Support Files/Pods-whospick_reactnative_actor/Pods-whospick_reactnative_actor-resources.sh","${PODS_ROOT}/GoogleSignIn/Resources/GoogleSignIn.bundle","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf","${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf","${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle"],"name":"[CP] Copy Pods Resources","originalObjectID":"CB471228E911E1ABE9DC7142","outputFileListPaths":[],"outputFilePaths":["${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleSignIn.bundle","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf","${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle"],"scriptContents":"\"${PODS_ROOT}/Target Support Files/Pods-whospick_reactnative_actor/Pods-whospick_reactnative_actor-resources.sh\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","buildFiles":[],"emitEnvironment":"true","guid":"1b51eb2de9250bf0ff9c7ab3dd03c968db775f4f263c7c31c2373b4f0da5ee65","inputFileListPaths":[],"inputFilePaths":[],"name":"[CP-User] [RNFB] Core Configuration","originalObjectID":"ED129F3466C1401F37C65D72","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[],"destinationSubfolder":"$(FRAMEWORKS_FOLDER_PATH)","destinationSubpath":"","guid":"3e867f0b043b118c91122848645ae76b","type":"com.apple.buildphase.copy-files"}],"buildRules":[],"dependencies":[],"guid":"1b51eb2de9250bf0ff9c7ab3dd03c9687ceb6b36bcfc2fb90f69ac96de4975d6","name":"whospick_reactnative_actor","predominantSourceCodeLanguage":"Xcode.SourceCodeLanguage.Objective-C","productReference":{"guid":"1b51eb2de9250bf0ff9c7ab3dd03c9684f47f80af1468e62de75f083b8820a77","name":"WhospickU.app","type":"product"},"productTypeIdentifier":"com.apple.product-type.application","provisioningSourceData":[{"appIDHasFeaturesEnabled":"true","bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Debug","legacyTeamID":"63SVQ5CFBK","provisioningStyle":0},{"appIDHasFeaturesEnabled":"true","bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Release","legacyTeamID":"63SVQ5CFBK","provisioningStyle":0}],"type":"standard"}